type Pet {
    id: ID!
    name: String!
    animalType: String!
    breed: String!
    age: Int!
    householdEircode: String # Nullable
}

type Household {
    eircode: String!
    numberOfOccupants: Int!
    maxOccupants: Int!
    ownerOccupied: Boolean!
    pets: [Pet]
}

type PetStatistics {
    averageAge: Float!
    oldestAge: Int!
    totalCount: Int!
}

type HouseholdStatistics {
    emptyHouses: Int!
    fullHouses: Int!
}

type Query {
    households: [Household!]!
    petsByAnimalType(animalType: String!): [Pet!]!
    household(eircode: String!): Household
    pet(id: ID!): Pet
    petStatistics: PetStatistics!
    householdStatistics: HouseholdStatistics!
}

input CreateHouseholdInput {
    eircode: String!
    numberOfOccupants: Int!
    maxOccupants: Int!
    ownerOccupied: Boolean!
}

type Mutation {
    createHousehold(input: CreateHouseholdInput!): Household!
    deleteHousehold(eircode: String!): Boolean!
    deletePet(id: ID!): Boolean!
}